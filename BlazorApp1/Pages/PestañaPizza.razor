@page "/pizzas"
<header class="masthead bg-primary text-white text-center">
    <div class="container d-flex align-items-center flex-column">
        <h3>Las mejores pizzas para comprar con tu familia y/o amigos!</h3>
        <br>
        <div class=" gap-1">
            <select class="btn btn-dark p-2 border" @onclick="CambiarImagen" @bind="Model.Id">
                <option selected value="0">-Seleccione su pizza-</option>
                <option value="11">Muzzarela</option>
                <option value="12">Especial</option>
                <option value="13">Con jamon</option>
                <option value="14">Napolitana</option>
                <option value="15">4 Quesos</option>
                <option value="16">Cebolla</option>
                <option value="17">Anchoa</option>
                <option value="18">Anana</option>
                <option value="19">Huevo</option>
                <option value="20">Choclo</option>
                <option value="21">Milan</option>
            </select>
            <input class="btn btn-dark p-1 border" @bind="Model.Cantidad" type="number" min="1" max="10" />
        </div>
        <br>
        <img src="@Model.Source" class="img-fluid w-50" />
        <br>
        <h2 class="text-black"> Precio = @Model.Total.ToString("C") </h2>
        <div class="gap-1">
            <button class="btn btn-dark p-2 border" @onclick="CargarProductoCarrito">Agregar al carrito</button>
        </div>
    </div>
</header>
<div class="contenedor-boton fixed-bottom">
    <div class="botoncarrito">
        <a class="carr border border-dark" href="/carrito"><i class="fas fa-shopping-cart fa-2x"></i></a>
    </div>
</div>
@code {
    private class ProductoViewModel
    {
        int _cantidad;
        int _id;

        public int Id
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
                CalcularTotal();
            }
        }
        public int Cantidad
        {
            get
            {
                return _cantidad;
            }
            set
            {
                _cantidad = value;
                CalcularTotal();
            }
        }
        public string Source { get; set; }
        public int Total { get; set; }

        public async void CalcularTotal()
        {
            using var db = new CompraContext();

            Total = 0;
            if (Id != 0)
                Total += ((await db.Productos.SingleAsync(a => a.ProductoId == Id)).Precio * Cantidad);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Model.Cantidad = 1;
    }
    private void CambiarImagen()
    {
        if (Model.Id == 11)
            Model.Source = "/css/imagenes/muzzarella.png";
        else if (Model.Id == 12)
            Model.Source = "/css/imagenes/pjamon.png";
        else if (Model.Id == 13)
            Model.Source = "/css/imagenes/pjamon.png";
        else if (Model.Id == 14)
            Model.Source = "/css/imagenes/napolitana.png";
        else if (Model.Id == 15)
            Model.Source = "/css/imagenes/4quesos.png";
        else if (Model.Id == 16)
            Model.Source = "/css/imagenes/pcebolla.png";
        else if (Model.Id == 17)
            Model.Source = "/css/imagenes/anchoa.png";
        else if (Model.Id == 18)
            Model.Source = "/css/imagenes/anana.png";
        else if (Model.Id == 19)
            Model.Source = "/css/imagenes/frambuesa.png";
        else if (Model.Id == 20)
            Model.Source = "/css/imagenes/frambuesa.png";
        else if (Model.Id == 21)
            Model.Source = "/css/imagenes/milan.png";
        else if (Model.Id == 0)
            Model.Source = "";
    }

    private ProductoViewModel Model { get; set; } = new();

    private void CargarProductoCarrito()
    {
        if (Model.Id != 0)
        {
            using var db = new CompraContext();

            Carrito carrito = db.Carritos.Include(c => c.Productos).Where(c => c.UsuarioId == 1).SingleOrDefault();

            if (carrito is not null)
            {
                CarritoProducto carritoProducto = new CarritoProducto()
                    {
                        ProductoId = Model.Id,
                        Cantidad = Model.Cantidad,
                    };

                carrito.Productos.Add(carritoProducto);
                db.SaveChanges();
            }
            else
            {
                //anashe
            }
            Model.Id = 0;
            Model.Cantidad = 1;
        }
        CambiarImagen();
    }
}

@inject IAuthorizationService AuthorizationService
@inject UserManager<Usuario> UserManager
@page "/empanadas"

<div>
  <h3>Tipo de empanada</h3>
    <select @bind="Model.Id">
    <option selected></option>
    <option value="22">Empanada de carne</option>
    <option value="23">Empanada de choclo</option>
    <option value="27">Empanada de jamon y queso</option>
    <option value="25">Empanada de pollo</option>
    <option value="24">Empanada de verdura</option>
    </select>
    <br>
    <h4>Cantidad de empanada</h4>
    <input @bind="Model.Cantidad" type="number" min="1" max="30" />
    <br>
    <br>
</div>

<button class="btn btn-primary" @onclick="CargarProductoCarrito">Agregar al carrito</button>
@code {
    private class ProductoViewModel
    {
        public int Id{ get; set; }
        public int Cantidad{ get; set; }
    }

    private ProductoViewModel Model { get; set; } = new();
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private async void CargarProductoCarrito()
    {
        var user = (await AuthenticationStateTask).User;
        if (user.Identity.IsAuthenticated)
        {
            using var db = new CompraContext();
            var usuario = await UserManager.FindByNameAsync(user.Identity.Name);

            Carrito carrito = db.Carritos.Include(c => c.Productos).Where(c => c.UsuarioId == usuario.Id).SingleOrDefault();

            if (carrito is not null)
            {
                CarritoProducto carritoProducto = new CarritoProducto()
                {
                    ProductoId = Model.Id,
                    Cantidad = Model.Cantidad,
                    CarritoId = carrito.CarritoId,
                    Carrito = carrito,
                };

                carrito.Productos.Add(carritoProducto);
                db.SaveChanges();
            }
            else
            {
                //anashe
            }
        }
    }
}

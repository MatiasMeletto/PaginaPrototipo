@inject IAuthorizationService AuthorizationService
@inject UserManager<Usuario> UserManager
@page "/chori"

<div>
    <form action="#">
        <div class="container">
            <h1>Ingrese la cantidad de choripanes que quiere:</h1>
            <input @bind="Model.Cantidad" type="number" min="1" max="15" />
            <br>
            <label>
                <input @bind="Model.Criolla" type="checkbox" />
                Salsa criolla
            </label>
            <br>
            <label>
                <input @bind="Model.Chimi" type="checkbox" />
                Chimichurri
            </label>
            <br>
        </div>
    </form>
    <button class="btn btn-primary" @onclick="CargarProductoCarro">Agregar al carrito</button>
</div>

@code {

    private class ProductoViewModel
    {
        public int Cantidad { get; set; }
        public bool Criolla { get; set; }
        public bool Chimi { get; set; }
    }

    private ProductoViewModel Model { get; set; } = new();
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private async void CargarProductoCarro()
    {
        var user = (await AuthenticationStateTask).User;
        if (user.Identity.IsAuthenticated)
        {
            using var db = new CompraContext();
            var usuario = await UserManager.FindByNameAsync(user.Identity.Name);

            Carrito carrito = db.Carritos.Include(c => c.Productos).ThenInclude(p => p.Adicionales).Where(c => c.UsuarioId == usuario.Id).SingleOrDefault();

            if (carrito is not null)
            {
                CarritoProducto carritoProducto = new CarritoProducto()
                {
                    ProductoId = 1,
                    Cantidad = Model.Cantidad,
                    Adicionales = new()
                };

                if (Model.Chimi)
                {
                    carritoProducto.Adicionales.Add(new CarritoProductoAdicional()
                    {
                        AdicionalId = 2,
                        Cantidad = 1
                    });
                }
                if (Model.Criolla)
                {
                    carritoProducto.Adicionales.Add(new CarritoProductoAdicional()
                    {
                        AdicionalId = 1,
                        Cantidad = 1
                    });
                }
                carrito.Productos.Add(carritoProducto);
                db.SaveChanges();
            }
            else
            {
                //anashe
            }
        }
    }
}
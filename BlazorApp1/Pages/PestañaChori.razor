@page "/chori"

<!-- Limites-->
<header class="masthead bg-primary text-white text-center">
    <div class="container d-flex align-items-center flex-column">
        <form action="#">
            <div>
                <h2>Seleccione la cantidad de choripanes que quiere!</h2>
                <div class="row">
                    <div class="col-md-8 offset-md-2">
                        <img src="/css/Imagenes/314.png" />
                    </div>
                    <div class="col-md-8 offset-md-2">
                        <input @bind="Model.Cantidad" class="btn btn-dark" type="number" min="1" max="15" />
                    </div>
                    <div class="col-6"></div>
                </div>

                <br>
                <div>
                    <br>
                    <img src="/css/Imagenes/Criolla.png" alt="..." height="150" />
                    <input @bind="Model.Criolla" type="checkbox" />
                    <img src="/css/Imagenes/Chimi.png" alt="..." height="150" />
                    <input @bind="Model.Chimi" type="checkbox" />
                </div>
                <br>
            </div>
            <br>
        </form>
    </div>
    <h2 class="text-black"> Precio = @Model.Total.ToString("C") </h2>
    <button class="btn btn-dark" @onclick="CargarProductoCarro">Agregar al carrito</button>



</header>
<div class="contenedor-boton fixed-bottom">
    <div class="botoncarrito">
        <a class="carr border border-dark" href="/carrito"><i class="fas fa-shopping-cart fa-2x"></i></a>
    </div>
</div>

@code {

    private class ProductoViewModel
    {
        int _cantidad;

        public int Cantidad
        {
            get
            {
                return _cantidad;
            }
            set
            {
                _cantidad = value;
                CalcularTotal();
            }
        }
        public bool Criolla { get; set; }
        public bool Chimi { get; set; }
        public int Total { get; set; }
        public async void CalcularTotal()
        {
            using var db = new CompraContext();

            Producto producto = db.Productos.Where(c => c.ProductoId == 1).SingleOrDefault();

            Total = 0;

            Total = producto.Precio * Cantidad;
        }
    }


    private ProductoViewModel Model { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Model.Cantidad = 1;
        Model.CalcularTotal();
    }

    private void CargarProductoCarro()
    {
        using var db = new CompraContext();

        Carrito carrito = db.Carritos.Include(c => c.Productos).ThenInclude(p => p.Adicionales).Where(c => c.UsuarioId == 1).SingleOrDefault();

        if (carrito is not null)
        {
            CarritoProducto carritoProducto = new CarritoProducto()
                {
                    ProductoId = 1,
                    Cantidad = Model.Cantidad,
                    Adicionales = new()
                };

            if (Model.Chimi)
            {
                carritoProducto.Adicionales.Add(new CarritoProductoAdicional()
                    {
                        AdicionalId = 2,
                        Cantidad = 1
                    });
            }
            if (Model.Criolla)
            {
                carritoProducto.Adicionales.Add(new CarritoProductoAdicional()
                    {
                        AdicionalId = 1,
                        Cantidad = 1
                    });
            }
            carrito.Productos.Add(carritoProducto);
            db.SaveChanges();
        }
        else
        {
            //anashe
        }
        Model.Chimi = false;
        Model.Criolla = false;
        Model.Cantidad = 1;
    }
}
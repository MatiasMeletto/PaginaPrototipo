@page "/empanadas"
    <!-- Limites-->
    <header class="masthead bg-primary text-white text-center">
        <div class="container d-flex align-items-center flex-column">
            <h3><label class="my-1 mr-2" for="inlineFormCustomSelectPref">Seleccione el tipo de empanada!</label></h3>
                <select class="btn btn-dark p-2 border" id="inlineFormCustomSelectPref" @bind="Model.Id">
                    <option selected value="0">-Seleccione su empanada-</option>
                    <option value="22">Empanada de carne</option>
                    <option value="23">Empanada de choclo</option>
                    <option value="27">Empanada de jamon y queso</option>
                    <option value="25">Empanada de pollo</option>
                    <option value="24">Empanada de verdura</option>
                </select>
                <input class="btn btn-dark p-1 border" @bind="Model.Cantidad" type="number" min="1" max="32" />
                <br>
                <br>
                <img src="@Model.Source" class="img-fluid " />
                <br>
                <h2 class="text-black"> Precio = @Model.Total.ToString("C") </h2>
                
                <button class="btn btn-dark p-2 border" @onclick="CargarProductoCarrito">Agregar al carrito</button>
</div>        
</header>
    <div class="contenedor-boton fixed-bottom">
        <div class="botoncarrito">
            <a class="carr border border-dark" href="/carrito"><i class="fas fa-shopping-cart fa-2x"></i></a>
        </div>
    </div>
@code {
    private class ProductoViewModel
    {
        int _cantidad;
        int _id;

        public int Id
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
                CalcularTotal();
            }
        }
        public int Cantidad
        {
            get
            {
                return _cantidad;
            }
            set
            {
                _cantidad = value;
                CalcularTotal();
            }
        }
        public string Source { get; set; } =  "/css/imagenes/frol.jpg";
        public int Total { get; set; }

        public async void CalcularTotal()
        {
            using var db = new CompraContext();

            Total = 0;
            if (Id != 0)
                Total += ((await db.Productos.SingleAsync(a => a.ProductoId == Id)).Precio * Cantidad);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Model.Cantidad = 1;
    }

    private void CambiarImagen()
    {
        if (Model.Id == 1)
            Model.Source = "/css/imagenes/muzzarella.png";
        else if (Model.Id == 2)
            Model.Source = "/css/imagenes/pjamon.png";
        else if (Model.Id == 3)
            Model.Source = "/css/imagenes/napolitana.png";
        else if (Model.Id == 4)
            Model.Source = "/css/imagenes/pjamon.png";
        else if (Model.Id == 5)
            Model.Source = "/css/imagenes/pjamon.png";
        else if (Model.Id == 0)
            Model.Source = "";
    }
    private ProductoViewModel Model { get; set; } = new();

    private void CargarProductoCarrito()
    {
        if (Model.Id != 0)
        {
            using var db = new CompraContext();

            Carrito carrito = db.Carritos.Include(c => c.Productos).Where(c => c.UsuarioId == 1).SingleOrDefault();

            if (carrito is not null)
            {
                CarritoProducto carritoProducto = new CarritoProducto()
                {
                    ProductoId = Model.Id,
                    Cantidad = Model.Cantidad,
                };

                carrito.Productos.Add(carritoProducto);
                db.SaveChanges();
            }
            else
            {
                //anashe
            }
            Model.Id = 0;
            Model.Cantidad = 1;
        }
    }

}
}



// <auto-generated />
using BlazorApp1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp1.Data.Migrations
{
    [DbContext(typeof(CompraContext))]
    [Migration("20220622224611_CargaInicialDeDatos")]
    partial class CargaInicialDeDatos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("BlazorApp1.Data.Models.Adicional", b =>
                {
                    b.Property<int>("AdicionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Precio")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AdicionalId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Adicionales");

                    b.HasData(
                        new
                        {
                            AdicionalId = 1,
                            Nombre = "Salsa criolla",
                            Precio = 0,
                            ProductoId = 1
                        },
                        new
                        {
                            AdicionalId = 2,
                            Nombre = "Chimichurri",
                            Precio = 0,
                            ProductoId = 1
                        });
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Carrito", b =>
                {
                    b.Property<int>("CarritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarritoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.CarritoProducto", b =>
                {
                    b.Property<int>("CarritoProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarritoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarritoProductoId");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoProductos");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.CarritoProductoAdicional", b =>
                {
                    b.Property<int>("CarritoProductoAdicionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdicionalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarritoProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarritoProductoAdicionalId");

                    b.HasIndex("AdicionalId");

                    b.HasIndex("CarritoProductoId");

                    b.ToTable("CarritoProductoAdicional");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            Nombre = "Choripan"
                        },
                        new
                        {
                            CategoriaId = 2,
                            Nombre = "Pizza"
                        },
                        new
                        {
                            CategoriaId = 3,
                            Nombre = "Torta"
                        },
                        new
                        {
                            CategoriaId = 4,
                            Nombre = "Hamburguesa"
                        },
                        new
                        {
                            CategoriaId = 5,
                            Nombre = "Empanada"
                        },
                        new
                        {
                            CategoriaId = 6,
                            Nombre = "Bebida"
                        });
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PedidoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.PedidoProducto", b =>
                {
                    b.Property<int>("PedidoProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Precio")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PedidoProductoId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("PedidoProductos");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Precio")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            CategoriaId = 1,
                            Nombre = "Choripan",
                            Precio = 100
                        });
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Adicional", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Producto", "Producto")
                        .WithMany("Adicionales")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Carrito", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.CarritoProducto", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Carrito", "Carrito")
                        .WithMany("Productos")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Data.Models.Producto", "Producto")
                        .WithMany("Carritos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.CarritoProductoAdicional", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Adicional", "Adicional")
                        .WithMany()
                        .HasForeignKey("AdicionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Data.Models.CarritoProducto", "CarritoProducto")
                        .WithMany("Adicionales")
                        .HasForeignKey("CarritoProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adicional");

                    b.Navigation("CarritoProducto");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Pedido", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.PedidoProducto", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Pedido", "Pedido")
                        .WithMany("Productos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Data.Models.Producto", "Producto")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Producto", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Carrito", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.CarritoProducto", b =>
                {
                    b.Navigation("Adicionales");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Pedido", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Producto", b =>
                {
                    b.Navigation("Adicionales");

                    b.Navigation("Carritos");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}

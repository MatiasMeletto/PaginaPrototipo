// <auto-generated />
using BlazorApp1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp1.Data.Migrations
{
    [DbContext(typeof(CompraContext))]
    partial class CompraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("BlazorApp1.Data.Models.Adicional", b =>
                {
                    b.Property<int>("AdicionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Precio")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AdicionalId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Adicionales");

                    b.HasData(
                        new
                        {
                            AdicionalId = 1,
                            Nombre = "Salsa criolla",
                            Precio = 0,
                            ProductoId = 1
                        },
                        new
                        {
                            AdicionalId = 2,
                            Nombre = "Chimichurri",
                            Precio = 0,
                            ProductoId = 1
                        },
                        new
                        {
                            AdicionalId = 3,
                            Nombre = "Pan",
                            Precio = 50,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 4,
                            Nombre = "Carne",
                            Precio = 100,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 5,
                            Nombre = "Lechuga",
                            Precio = 42,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 6,
                            Nombre = "Tomate",
                            Precio = 37,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 7,
                            Nombre = "Huevo",
                            Precio = 68,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 8,
                            Nombre = "Bacon",
                            Precio = 53,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 9,
                            Nombre = "Cheddar",
                            Precio = 49,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 10,
                            Nombre = "Tybo",
                            Precio = 41,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 11,
                            Nombre = "Jamon",
                            Precio = 40,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 12,
                            Nombre = "Cebolla",
                            Precio = 67,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 13,
                            Nombre = "Mayonesa",
                            Precio = 36,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 14,
                            Nombre = "Ketchup",
                            Precio = 33,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 15,
                            Nombre = "Mostaza",
                            Precio = 24,
                            ProductoId = 4
                        },
                        new
                        {
                            AdicionalId = 16,
                            Nombre = "Sabora",
                            Precio = 26,
                            ProductoId = 4
                        });
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Carrito", b =>
                {
                    b.Property<int>("CarritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarritoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carritos");

                    b.HasData(
                        new
                        {
                            CarritoId = 1,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.CarritoProducto", b =>
                {
                    b.Property<int>("CarritoProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarritoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarritoProductoId");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoProductos");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.CarritoProductoAdicional", b =>
                {
                    b.Property<int>("CarritoProductoAdicionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdicionalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarritoProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarritoProductoAdicionalId");

                    b.HasIndex("AdicionalId");

                    b.HasIndex("CarritoProductoId");

                    b.ToTable("CarritoProductoAdicional");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            Nombre = "Choripan"
                        },
                        new
                        {
                            CategoriaId = 2,
                            Nombre = "Pizza"
                        },
                        new
                        {
                            CategoriaId = 3,
                            Nombre = "Torta"
                        },
                        new
                        {
                            CategoriaId = 4,
                            Nombre = "Hamburguesa"
                        },
                        new
                        {
                            CategoriaId = 5,
                            Nombre = "Empanada"
                        },
                        new
                        {
                            CategoriaId = 6,
                            Nombre = "Bebida"
                        });
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PedidoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            PedidoId = 1,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.PedidoProducto", b =>
                {
                    b.Property<int>("PedidoProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Precio")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PedidoProductoId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("PedidoProductos");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.PedidoProductoAdicional", b =>
                {
                    b.Property<int>("PedidoProductoAdicionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdicionalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PedidoProductoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PedidoProductoAdicionalId");

                    b.HasIndex("AdicionalId");

                    b.HasIndex("PedidoProductoId");

                    b.ToTable("pedidoProductoAdicionales");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Precio")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            CategoriaId = 1,
                            Nombre = "Choripan",
                            Precio = 100
                        },
                        new
                        {
                            ProductoId = 3,
                            CategoriaId = 3,
                            Nombre = "Torta de chocolate",
                            Precio = 500
                        },
                        new
                        {
                            ProductoId = 5,
                            CategoriaId = 3,
                            Nombre = "Torta de zanahoria",
                            Precio = 600
                        },
                        new
                        {
                            ProductoId = 6,
                            CategoriaId = 3,
                            Nombre = "Torta de vainilla",
                            Precio = 500
                        },
                        new
                        {
                            ProductoId = 7,
                            CategoriaId = 3,
                            Nombre = "Pastafrola",
                            Precio = 700
                        },
                        new
                        {
                            ProductoId = 8,
                            CategoriaId = 3,
                            Nombre = "Brownie",
                            Precio = 750
                        },
                        new
                        {
                            ProductoId = 10,
                            CategoriaId = 3,
                            Nombre = "Torta de Frambuesa",
                            Precio = 800
                        },
                        new
                        {
                            ProductoId = 4,
                            CategoriaId = 4,
                            Nombre = "Hamburguesa",
                            Precio = 0
                        },
                        new
                        {
                            ProductoId = 11,
                            CategoriaId = 2,
                            Nombre = "Muzzarela",
                            Precio = 700
                        },
                        new
                        {
                            ProductoId = 12,
                            CategoriaId = 2,
                            Nombre = "Especial",
                            Precio = 900
                        },
                        new
                        {
                            ProductoId = 13,
                            CategoriaId = 2,
                            Nombre = "Jamon",
                            Precio = 850
                        },
                        new
                        {
                            ProductoId = 14,
                            CategoriaId = 2,
                            Nombre = "Napolitana",
                            Precio = 900
                        },
                        new
                        {
                            ProductoId = 15,
                            CategoriaId = 2,
                            Nombre = "4 Quesos",
                            Precio = 950
                        },
                        new
                        {
                            ProductoId = 16,
                            CategoriaId = 2,
                            Nombre = "Cebolla",
                            Precio = 850
                        },
                        new
                        {
                            ProductoId = 17,
                            CategoriaId = 2,
                            Nombre = "Anchoa",
                            Precio = 900
                        },
                        new
                        {
                            ProductoId = 18,
                            CategoriaId = 2,
                            Nombre = "Anana",
                            Precio = 850
                        },
                        new
                        {
                            ProductoId = 19,
                            CategoriaId = 2,
                            Nombre = "Huevo",
                            Precio = 850
                        },
                        new
                        {
                            ProductoId = 20,
                            CategoriaId = 2,
                            Nombre = "Choclo",
                            Precio = 850
                        },
                        new
                        {
                            ProductoId = 21,
                            CategoriaId = 2,
                            Nombre = "Milan",
                            Precio = 850
                        },
                        new
                        {
                            ProductoId = 22,
                            CategoriaId = 5,
                            Nombre = "Carne",
                            Precio = 100
                        },
                        new
                        {
                            ProductoId = 23,
                            CategoriaId = 5,
                            Nombre = "Choclo",
                            Precio = 100
                        },
                        new
                        {
                            ProductoId = 24,
                            CategoriaId = 5,
                            Nombre = "Verdura",
                            Precio = 100
                        },
                        new
                        {
                            ProductoId = 25,
                            CategoriaId = 5,
                            Nombre = "Pollo",
                            Precio = 100
                        },
                        new
                        {
                            ProductoId = 27,
                            CategoriaId = 5,
                            Nombre = "JamonYQueso",
                            Precio = 100
                        },
                        new
                        {
                            ProductoId = 28,
                            CategoriaId = 6,
                            Nombre = "Coca-Cola",
                            Precio = 170
                        },
                        new
                        {
                            ProductoId = 29,
                            CategoriaId = 6,
                            Nombre = "Pepsi",
                            Precio = 150
                        },
                        new
                        {
                            ProductoId = 30,
                            CategoriaId = 6,
                            Nombre = "Sprite",
                            Precio = 170
                        },
                        new
                        {
                            ProductoId = 31,
                            CategoriaId = 6,
                            Nombre = "Fanta",
                            Precio = 150
                        });
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Nombre = "guest",
                            Password = "password"
                        });
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Adicional", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Producto", "Producto")
                        .WithMany("Adicionales")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Carrito", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.CarritoProducto", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Carrito", "Carrito")
                        .WithMany("Productos")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Data.Models.Producto", "Producto")
                        .WithMany("Carritos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.CarritoProductoAdicional", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Adicional", "Adicional")
                        .WithMany()
                        .HasForeignKey("AdicionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Data.Models.CarritoProducto", "CarritoProducto")
                        .WithMany("Adicionales")
                        .HasForeignKey("CarritoProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adicional");

                    b.Navigation("CarritoProducto");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Pedido", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.PedidoProducto", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Pedido", "Pedido")
                        .WithMany("Productos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Data.Models.Producto", "Producto")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.PedidoProductoAdicional", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Adicional", "Adicional")
                        .WithMany()
                        .HasForeignKey("AdicionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.Data.Models.PedidoProducto", "PedidoProducto")
                        .WithMany("Adicionales")
                        .HasForeignKey("PedidoProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adicional");

                    b.Navigation("PedidoProducto");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Producto", b =>
                {
                    b.HasOne("BlazorApp1.Data.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Carrito", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.CarritoProducto", b =>
                {
                    b.Navigation("Adicionales");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Pedido", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.PedidoProducto", b =>
                {
                    b.Navigation("Adicionales");
                });

            modelBuilder.Entity("BlazorApp1.Data.Models.Producto", b =>
                {
                    b.Navigation("Adicionales");

                    b.Navigation("Carritos");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
